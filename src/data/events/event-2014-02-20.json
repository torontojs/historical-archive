{
	"title": "February Tech Talk Night - Promises, HTML5 Games, Om",
	"hosts": [
		"Taz S."
	],
	"startDate": "2014-02-20T18:00:00-05:00",
	"endDate": "2014-02-20T18:00:00-05:00",
	"status": "active",
	"locationType": "in-person",
	"image": null,
	"tags": [
		"Events in Toronto, ON"
	],
	"details": "Details\n-------\n\n2014 just wouldn't be the same without a Toronto JavaScript Tech Talk Night, so let's have one!\n\nFirstly, we'd like to thank our amazing sponsor for making the night possible:\n\nViafoura ([http://viafoura.com/](http://viafoura.com/))\n\nViafoura ([http://viafoura.com/](http://viafoura.com/)) builds tools that operates at really large scales using the latest open source technology. They help media companies (some of their clients are CBC, LA Times, France 24) get more engagement (i.e. comments) and understand their audience (i.e. Analytics). They deal with thousands of transactions per second, hundreds of millions of users per month and billions of page views. They rival the greats like Reddit for traffic. They use Backbone, Node and Cassandra (as well as some \"old school” technology like MySQL and PHP. They are on Amazon as well.\n\nCAIL Mobility ([http://cailmobility.com/about/](http://cailmobility.com/about/))\n\nCAIL ([http://cailmobility.com/](http://cailmobility.com/)) is a leading enterprise mobility solution provider that enables organizations to create and deploy new Mobile Services / Apps on Smartphones and Tablets – fast.\n\nWith CAIL Platform, users can use a web portal to design and publish mobile apps to Android, iOS and HTML5 format. Using Bootstrap and built on top of .NET/C#, RESTful APIs, etc. it is a cutting-edge platform which frees its customers from hassles of development and helps them to focus on innovation.\n\nCAIL is looking for web and mobile developers, either contract or permanent, full time or part time. See [cailmobility.com](http://cailmobility.com) ([http://cailmobility.com/](http://cailmobility.com/)) Career section for the details.\n\nWe'll also be giving away a ticket for jQueryTO ([http://jqueryto.com/](http://jqueryto.com/)) which is coming up in March! Check out the website for more information and feel free to use the discount code \"torontojs\" to receive $50 the regular ticket price.\n\nIn addition to that ticket giveaway, we'll also be giving away two tickets to FITC Spotlight: MEAN Stack ([http://fitc.ca/event/meanstack/](http://fitc.ca/event/meanstack/)). Check out the website for more details.\n\nTaking Promises Seriously - James MacAulay ([https://twitter.com/jamesmacaulay](https://twitter.com/jamesmacaulay))\n\nThe \"promise of promises\" was that we would be able to work with composable values in both our synchronous and asynchronous code – but we're still building systems which punish us for thinking that way. Promises are now truly part of the JavaScript language, which means we can stop worrying about which API to use and start taking them seriously. This talk will go beyond the basics and demonstrate powerful techniques for building systems that treat promises as first-class citizens of the language.\n\nCreate games with HTML5 - Aaron McLeod ([https://twitter.com/agmcleod](https://twitter.com/agmcleod))\n\nAn overview of both the benefits and costs to using the web as the target platform for your games. What technology you should be building your game with. Whether you use straight javascript, or something fancy like emscripten to compile C. Whether you should use canvas or webgl or both. A brief introduction to some of the tools & game engines avialable to you. And then finishing up with some tips on how to get started. Aaron McLeod is a programmer for Mosaic Sales Solutions, primarily coding in Ruby. He's been doing small games & experiments on the side for over a year, starting off with Java and moving into HTML5.\n\nOm: think locally, React immutably - Dann Toliver ([https://twitter.com/dann](https://twitter.com/dann))\n\nWhat if your application could have unlimited undoability with no complexity or performance cost? What if you could refresh your entire UI for every change without paying the DOM tax? We'll examine a new framework called Om that makes this possible. Along the way we'll encounter persistent data structures, the React framework, cursors, lens, zippers, CSP via core.async and a little ClojureScript. We'll cap it off with a demo of these concepts working together and some ideas for future directions.\n\nPizza will be arriving at 6:15pm. See you there!"
}
